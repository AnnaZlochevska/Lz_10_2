<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>